Self-Study of MEAN
The Mean Stack Deployment to Ubuntu in AWS. 
Things require to study in other to implement MEAN
1. OSI model: This is a conceptual model which helps in standardizing of a telecommunication without the regard of its underlying structure or architecture. 
There are basically 7 layers in OSI Moodel:
7. Application Layer: This 
6. Presentation Layer
5. Session Layer
4. Transport Layer
3. Network layer
2. Data Link Layer
1. Physical Layer

Layers 1 to 7 uses the protocol data unit(PDU) 

Application: This layer is concerned with this basic function which is to provide an Application interface by which the client and server can communicate. 

Presentation: Translation of data between Router(or service provider) and an application; This is usually characterised by decrypting and encrypting data.

Session: This is a layer which manages the communication exchange between two end points such as the server or client.

Transmission : Layer 4 which is transport layer has a PDU ->  Segment, Datagram. This layer is used for reliable communication or transmission of data from points on a network.

Network : its PDU is packet, This is a way of structuring and managing muiltple node network including addressing and routing.

Data Link: Its pdu is frame; this layer is concerned with successfully transmitting data frames between two physical devices connected through a physical layer.

Physical : its PDU is Bit symbols which is primarily concerned about the transmission of raw bits

During the implementation of MEAN, I learnt about the "LOAD BALANCING", and its effects on traffic to the back-end server or the client server side. During the implementation I considered the task size , the nature tasks, dependencies, segragation of task.

Uses cases of Load Balancing
Internet-Based Services
1. Round-Robin DNS: muiltple ip address are associated within a single domain name, if it is assigned to clients with a short expiration so the client is more likely to use a different IP, when next it connects to the internet service being requested for.

2. Server Load Balancer: This is usually a software program that is listening on the port for external clients to connect to its accessories. The load-balancer forwards requests to one of the backend servers which replies to the load balancer.

3. Scheduling Algorithms 
Additional factors such as server's reported loads, least response times, up/down status(determined by a monitoring poll of a kind), number of active connections, geographical location.

The load balancer uses either static or dynamic Algorithms.

Static Algorithms is static when it does not take into acount the state of the system for the distribution of tasks.

Dynamic Algorithms takes into account the current load of each oof the computing units in the system . In this approach, tasks can be moved dynamically from one overloaded node to an underloaded node.